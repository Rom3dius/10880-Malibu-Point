[{"/home/romedius/Documents/Programming/AshTerm/src/index.js":"1","/home/romedius/Documents/Programming/AshTerm/src/App.js":"2","/home/romedius/Documents/Programming/AshTerm/src/components/Term.js":"3","/home/romedius/Documents/Programming/AshTerm/src/components/Commands/commands.js":"4","/home/romedius/Documents/Programming/AshTerm/src/utils/cat.js":"5","/home/romedius/Documents/Programming/AshTerm/src/utils/spotify.js":"6"},{"size":174,"mtime":1661629184469,"results":"7","hashOfConfig":"8"},{"size":202,"mtime":1661629184469,"results":"9","hashOfConfig":"8"},{"size":10604,"mtime":1661710091027,"results":"10","hashOfConfig":"8"},{"size":7016,"mtime":1661710023845,"results":"11","hashOfConfig":"8"},{"size":173,"mtime":1661629184469,"results":"12","hashOfConfig":"8"},{"size":207,"mtime":1661629184469,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q6m2gm",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/romedius/Documents/Programming/AshTerm/src/index.js",[],[],"/home/romedius/Documents/Programming/AshTerm/src/App.js",["35","36"],[],"import React, { useState, useEffect } from 'react';\nimport Term from './components/Term.js'\n\nexport default function App() {\n  return (\n    <div className='container'>\n      <Term />\n    </div>\n  )\n}\n\n\n","/home/romedius/Documents/Programming/AshTerm/src/components/Term.js",["37"],[],"import Terminal from 'react-console-emulator'\nimport commands from '../components/Commands/commands.js'\nimport React from 'react'\nimport figlet from 'figlet';\nimport getcat from '../utils/cat'\n\nexport default function Term() {\n    const cmds = commands.commands\n    const owrs = commands.overwrites\n    const terminal = React.createRef()\n    const [prompt, setPrompt] = React.useState('anon@romedius:~$ ')\n    const [home, sethome] = React.useState('ashterm')\n    const [dir, setdir] = React.useState({\n        'ashterm': []\n    })\n    const welcomeMessage = \"⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢀⢄⢄⠢⡠⡀⢀⠄⡀⡀⠄⠄⠄⠄⠐⠡⠄⠉⠻⣻⣟⣿⣿⣄⠄⠄⠄⠄⠄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢠⢣⠣⡎⡪⢂⠊⡜⣔⠰⡐⠠⠄⡾⠄⠈⠠⡁⡂⠄⠔⠸⣻⣿⣿⣯⢂⠄⠄⠄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⡀⠄⠄⠄⠄⠄⠄⠄⠐⢰⡱⣝⢕⡇⡪⢂⢊⢪⢎⢗⠕⢕⢠⣻⠄⠄⠄⠂⠢⠌⡀⠄⠨⢚⢿⣿⣧⢄⠄⠄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⡐⡈⠌⠄⠄⠄⠄⠄⠄⠄⡧⣟⢼⣕⢝⢬⠨⡪⡚⡺⡸⡌⡆⠜⣾⠄⠄⠄⠁⡐⠠⣐⠨⠄⠁⠹⡹⡻⣷⡕⢄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⢄⠇⠂⠄⠄⠄⠄⠄⠄⠄⢸⣻⣕⢗⠵⣍⣖⣕⡼⡼⣕⢭⢮⡆⠱⣽⡇⠄⠄⠂⠁⠄⢁⠢⡁⠄⠄⠐⠈⠺⢽⣳⣄⠄⠄\\n⠄⠄⠄⠄⠄⢔⢕⢌⠄⠄⠄⠄⠄⢀⠄⠄⣾⢯⢳⠹⠪⡺⡺⣚⢜⣽⣮⣳⡻⡇⡙⣜⡇⠄⠄⢸⠄⠄⠂⡀⢠⠂⠄⢶⠊⢉⡁⠨⡒⠄⠄\\n⠄⠄⠄⠄⡨⣪⣿⢰⠈⠄⠄⠄⡀⠄⠄⠄⣽⣵⢿⣸⢵⣫⣳⢅⠕⡗⣝⣼⣺⠇⡘⡲⠇⠄⠄⠨⠄⠐⢀⠐⠐⠡⢰⠁⠄⣴⣾⣷⣮⣇⠄\\n⠄⠄⠄⠄⡮⣷⣿⠪⠄⠄⠄⠠⠄⠂⠠⠄⡿⡞⡇⡟⣺⣺⢷⣿⣱⢕⢵⢺⢼⡁⠪⣘⡇⠄⠄⢨⠄⠐⠄⠄⢀⠄⢸⠄⠄⣿⣿⣿⣿⣿⡆\\n⠄⠄⠄⢸⣺⣿⣿⣇⠄⠄⠄⠄⢀⣤⣖⢯⣻⡑⢕⢭⢷⣻⣽⡾⣮⡳⡵⣕⣗⡇⠡⡣⣃⠄⠄⠸⠄⠄⠄⠄⠄⠄⠈⠄⠄⢻⣿⣿⣵⡿⣹\\n⠄⠄⠄⢸⣿⣿⣟⣯⢄⢤⢲⣺⣻⣻⡺⡕⡔⡊⡎⡮⣿⣿⣽⡿⣿⣻⣼⣼⣺⡇⡀⢎⢨⢐⢄⡀⠄⢁⠠⠄⠄⠐⠄⠣⠄⠸⣿⣿⣯⣷⣿\\n⠄⠄⠄⢸⣿⣿⣿⢽⠲⡑⢕⢵⢱⢪⡳⣕⢇⢕⡕⣟⣽⣽⣿⣿⣿⣿⣿⣿⣿⢗⢜⢜⢬⡳⣝⢸⣢⢀⠄⠄⠐⢀⠄⡀⠆⠄⠸⣿⣿⣿⣿\\n⠄⠄⠄⢸⣿⣿⣿⢽⣝⢎⡪⡰⡢⡱⡝⡮⡪⡣⣫⢎⣿⣿⣿⣿⣿⣿⠟⠋⠄⢄⠄⠈⠑⠑⠭⡪⡪⢏⠗⡦⡀⠐⠄⠄⠈⠄⠄⠙⣿⣿⣿\\n⠄⠄⠄⠘⣿⣿⣿⣿⡲⣝⢮⢪⢊⢎⢪⢺⠪⣝⢮⣯⢯⣟⡯⠷⠋⢀⣠⣶⣾⡿⠿⢀⣴⣖⢅⠪⠘⡌⡎⢍⣻⠠⠅⠄⠄⠈⠢⠄⠄⠙⠿\\n⠄⠄⠄⠄⣿⣿⣿⣿⣽⢺⢍⢎⢎⢪⡪⡮⣪⣿⣞⡟⠛⠋⢁⣠⣶⣿⡿⠛⠋⢀⣤⢾⢿⣕⢇⠡⢁⢑⠪⡳⡏⠄⠄⠄⠄⠄⠄⢑⠤⢀⢠\\n⠄⠄⠄⠄⢸⣿⣿⣿⣟⣮⡳⣭⢪⡣⡯⡮⠗⠋⠁⠄⠄⠈⠿⠟⠋⣁⣀⣴⣾⣿⣗⡯⡳⡕⡕⡕⡡⢂⠊⢮⠃⠄⠄⠄⠄⠄⢀⠐⠨⢁⠨\\n⠄⠄⠄⠄⠈⢿⣿⣿⣿⠷⠯⠽⠐⠁⠁⢀⡀⣤⢖⣽⢿⣦⣶⣾⣿⣿⣿⣿⣿⣿⢎⠇⡪⣸⡪⡮⠊⠄⠌⠎⡄⠄⠄⠄⠄⠄⠄⡂⢁⠉⡀\\n⠄⠄⠄⠄⠄⠈⠛⠚⠒⠵⣶⣶⣶⣶⢪⢃⢇⠏⡳⡕⣝⢽⡽⣻⣿⣿⣿⣿⡿⣺⠰⡱⢜⢮⡟⠁⠄⠄⠅⠅⢂⠐⠄⠐⢀⠄⠄⠄⠂⡁⠂\\n⠄⠄⠄⠄⠄⠄⠄⠰⠄⠐⢒⣠⣿⣟⢖⠅⠆⢝⢸⡪⡗⡅⡯⣻⣺⢯⡷⡯⡏⡇⡅⡏⣯⡟⠄⠄⠄⠨⡊⢔⢁⠠⠄⠄⠄⠄⠄⢀⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⠹⣿⣿⣿⣿⢿⢕⢇⢣⢸⢐⢇⢯⢪⢪⠢⡣⠣⢱⢑⢑⠰⡸⡸⡇⠁⠄⠄⠠⡱⠨⢘⠄⠂⡀⠂⠄⠄⠄⠄⠈⠂⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⢻⣿⣿⣿⣟⣝⢔⢅⠸⡘⢌⠮⡨⡪⠨⡂⠅⡑⡠⢂⢇⢇⢿⠁⠄⢀⠠⠨⡘⢌⡐⡈⠄⠄⠠⠄⠄⠄⠄⠄⠄⠁\\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠹⣿⣿⣿⣯⢢⢊⢌⢂⠢⠑⠔⢌⡂⢎⠔⢔⢌⠎⡎⡮⡃⢀⠐⡐⠨⡐⠌⠄⡑⠄⢂⠐⢀⠄⠄⠈⠄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠙⣿⣿⣿⣯⠂⡀⠔⢔⠡⡹⠰⡑⡅⡕⡱⠰⡑⡜⣜⡅⡢⡈⡢⡑⡢⠁⠰⠄⠨⢀⠐⠄⠄⠄⠄⠄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠻⢿⣿⣷⣢⢱⠡⡊⢌⠌⡪⢨⢘⠜⡌⢆⢕⢢⢇⢆⢪⢢⡑⡅⢁⡖⡄⠄⠄⠄⢀⠄⠄⠄⠄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠛⢿⣿⣵⡝⣜⢐⠕⢌⠢⡑⢌⠌⠆⠅⠑⠑⠑⠝⢜⠌⠠⢯⡚⡜⢕⢄⠄⠁⠄⠄⠄⠄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠙⢿⣷⡣⣇⠃⠅⠁⠈⡠⡠⡔⠜⠜⣿⣗⡖⡦⣰⢹⢸⢸⢸⡘⠌⠄⠄⠄⠄⠄⠄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠋⢍⣠⡤⡆⣎⢇⣇⢧⡳⡍⡆⢿⣯⢯⣞⡮⣗⣝⢎⠇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠁⣿⣿⣎⢦⠣⠳⠑⠓⠑⠃⠩⠉⠈⠈⠉⠄⠁⠉⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⡿⡞⠁⠄⠄⢀⠐⢐⠠⠈⡌⠌⠂⡁⠌⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⢂⢂⢀⠡⠄⣈⠠⢄⠡⠒⠈⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠢⠠⠊⠨⠐⠈⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\"\n    return (\n        <Terminal\n            ref={terminal}\n            welcomeMessage={welcomeMessage + '\\nType help <enter> to get started!'}\n            commands={{\n                clear: {\n                    description: 'Clears the terminal',\n                    usage: 'clear',\n                    fn: () => {\n                        terminal.current.clearStdout()\n                    }\n                },\n                getcat: {\n                    description: 'Get a random cute cat~',\n                    usage: 'getcat',\n                    fn: async () => {\n                        const url = await getcat()\n                        terminal.current.pushToStdout(\"getting a cute cat for you..\\n---\\n\")\n                        terminal.current.pushToStdout(<img src={url} width=\"500px\" height=\"380px\" alt='cat'></img>)\n                    }\n                },\n                art: {\n                    description: 'Get ASCII art',\n                    usage: 'art',\n                    fn: () => {\n                        terminal.current.pushToStdout(welcomeMessage)\n                    }\n                },\n                cd: {\n                    description: 'Change directory, not really, lol!',\n                    usage: 'cd <directory>',\n                    fn: (...args) => {\n                        if (args.length===1 && args[0]==='..') {\n                            if (prompt === 'anon@romedius:~$ ') {\n                                return 'cannot go up'\n                            } else {\n                                setPrompt(prompt.substring(0, prompt.lastIndexOf('/'))+\":~$ \")\n                                sethome(prompt.substring(prompt.lastIndexOf('/', prompt.lastIndexOf('/')-1)+1, prompt.lastIndexOf('/')))\n                                //console.log(prompt.substring(prompt.lastIndexOf('/', prompt.lastIndexOf('/')-1)+1, prompt.lastIndexOf('/')))\n                                //console.log(prompt.lastIndexOf('/', prompt.lastIndexOf('/')-1))\n                                //console.log(prompt.lastIndexOf('/'))\n                                return 'changed directory'\n                            }\n                        } else {\n                            if (dir[home].includes(args[0])) {\n                                setPrompt(`${prompt.slice(0, -4)+ \"/\" + args.join('/') + \":~$ \"}`)\n                                sethome(args.join('/'))\n                                //console.log(prompt.slice(0, -4)+ \"/\" + args.join('/'))\n                                return 'changed directory'\n                            } else {\n                                return 'cannot find directory'\n                            }\n                        }\n\n                    }\n                },\n                ls: {\n                    description: 'List files in the current directory',\n                    usage: 'ls',\n                    fn: () => {\n                        if (dir[home].length === 0) {\n                            return 'nothing here :(\\nUse mkdir to create a dir inside this one.'\n                        } else {\n                            return dir[home].join('\\n')\n                        }\n                    }\n\n                },\n                mkdir: {\n                    description: 'Make a directory',\n                    usage: 'mkdir <directory>',\n                    fn: (...args) => {\n                        if (args.length===1) {\n                            setdir({\n                                ...dir,\n                                [home]: [...dir[home], args[0]],\n                                [args[0]]:[]\n                            })\n                            //console.log(dir)\n                            return `created directory ${args[0]}.`\n                        } else {\n                            return 'invalid arguments'\n                        }\n                    }\n                },\n                help: {\n                    description: 'List all available commands',\n                    usage: 'help',\n                    fn: () => {\n                        return `\n                            ${Object.keys(owrs).map(cmd => `${cmd}${\" \".repeat(12-cmd.length)} | ${owrs[cmd].description}${\" \".repeat(39-owrs[cmd].description.length)} | ${owrs[cmd].usage}`).join('\\n')}\n                            ${Object.keys(cmds).map(cmd => `${cmd}${\" \".repeat(12-cmd.length)} | ${cmds[cmd].description}${\" \".repeat(39-cmds[cmd].description.length)} | ${cmds[cmd].usage}`).join('\\n')}\n                        `\n                    }\n                },\n                ...cmds\n            }}\n            promptLabel={prompt}\n            autoFocus\n            style={{\n                backgroundColor:null,\n                minHeight: null,\n                maxHeight: null,\n                overflow: 'auto',\n                height: '100%',\n                width: '100%',\n            }}\n            styleEchoBack='fullInherit'\n            contentStyle={{ color: '#ffb86c' , fontWeight: 'normal', paddingLeft: null}} // Text colour\n            promptLabelStyle={{ color: '#ff5555' , fontWeight:'normal'}} // Prompt label colour\n            inputTextStyle={{ color: '#f1fa8c' , fontWeight: 'normal'}}\n            messageStyle={{ color: '#8be9fd' , fontWeight: 'normal', paddingLeft: null}}\n            scrollBehavior='auto'\n            noDefaults\n        />\n    )\n}\n","/home/romedius/Documents/Programming/AshTerm/src/components/Commands/commands.js",["38","39"],["40"],"/* eslint-disable import/no-anonymous-default-export */\nimport getcat from \"../../utils/cat\"\nimport getnp from \"../../utils/spotify\"\nexport default {\n    commands: {\n        echo: {\n            description: 'Prints the given text to the console',\n            usage: 'echo <text>',\n            fn: (...args) => args.join(\" \")\n        },\n        // cat: {\n        //     description: 'Get a cute cat image.',\n        //     usage: 'cat',\n        //     fn: async () => {\n        //         const url = await getcat()\n        //         window.open(url, '_blank')\n        //         return \"fetching cat...\\ncat fetched successfully!\"\n        //     }\n        // },\n        whois: {\n            description: 'About Me.',\n            usage: 'whois',\n            fn: () => {\n                return \"About Me.\\n---\\nmale\\n19\\nstudent\\nworking at numeus\\ninitiald\\nbased in switzerland\\n---\\n\"\n            }\n        },\n        twitter: {\n            description: 'Opens my Twitter Handle.',\n            usage: 'twitter',\n            fn: () => {\n                /* window.open('https://twitter.com/_asheeshh', '_blank') */\n                return \"don't have twitter... maybe in the future\"\n            }\n        },\n        github: {\n            description: 'Opens my GitHub Profile.',\n            usage: 'github',\n            fn: () => {\n                window.open('https://github.com/Rom3dius', '_blank')\n                return \"opening github account...\"\n            }\n        },\n        discord: {\n            description: 'Opens my Discord Account.',\n            usage: 'discord',\n            fn: () => {\n                window.open('https://discordapp.com/users/178721879878533120', '_blank')\n                return \"opening discord account...\"\n            }\n        },\n        languages: {\n            description: 'Languages I know.',\n            usage: 'languages',\n            fn: () => {\n                return `\n                    these are the languages I know.\\n---\\n\n                    english          - 100%\n                    german           - 65%\n                    python           - 80%\n                    javascript       - 20%\n                    rust             - 10%\n                    c++              - 5%\\n---\\n\n                `\n            }\n        },\n        skills: {\n            description: 'Skills I have.',\n            usage: 'skills',\n            fn: () => {\n                return `\n                    these are the skills I have.\\n---\\n\n                    procrastination  - 100%\n                    coding           - 50%\n                    pentesting       - 30%\n                    studying         - 5%\n                    overthinking     - 100%\n                    driving          - 60%\n                    problem solving  - 40%\\n---\\n\n                `\n            }\n        },\n        projects: {\n            description: 'Projects I have worked on.',\n            usage: 'projects',\n            fn: () => {\n                return `\n                    Cool projects I have worked on.\\n---\\n\n                    'discord-ttt'                    | 'discord bot for gmod ttt (mutes dead players)'   | 'python/lua'\n                    'tv-binance-relay'               | 'open trades using signals from tv scripts'       | 'python/pinescript'\n                    'thallia-discord'                | 'Discord-Bot'                                     | 'python'\n                    'tv-settings-optimizer'          | 'optimizes pine script settings'                  | 'python/pinescript'\n                    'pl-translate'                   | 'pig latin translator'                            | 'C++'\n                    Cool projects I'm working on. \\n---\\n\n                    's3cr3t-stuff'                   | 'for my awesome employers at NUMEUS'              | 'python/C++'\n                    'hyperion'                       | 'trading passion project'                         | 'rust'\n                    '10880 Malibu Point'             | 'this website'                                    | 'react-js'\n              `\n            }\n        },\n        editor: {\n            description: 'Details about my current editor',\n            usage: 'editor',\n            fn: () => {\n                return `\n                    Editor: Neovim\\n\n                    Plugins: >70\\n\n                                   `\n            }\n        },\n        /* repo: {\n            description: \"Opens this website's github repository.\",\n            usage: 'repo',\n            fn: () => {\n                window.open(\"https://github.com/asrvd/AshTerm\", '_blank')\n                return \"opening repository...\"\n            }\n        }, */\n        credits: {\n            description: 'Credits for this website.',\n            usage: 'credits',\n            fn: () => {\n                return `\n                    Credits for this website.\\n---\\n\n                    numeus.xyz\n                    AshTerm by asrvd\n                `\n            }\n        },\n        spotify: {\n            description: 'Get info about my recently played song.',\n            usage: 'spotify',\n            fn: async () => {\n                const item = await getnp()\n                return `Not implemented yet! Check back later.`\n              /* return `\n                    Now Playing/Recently Played\\n\n                    ---\\n\n                    Song: ${item.song}\\n\n                    Artist: ${item.artist}\\n---\\n\n                `  */\n            }\n        }\n    },\n    overwrites:{\n        help: {\n            description: 'List all available commands',\n            usage: 'help',\n        },\n        cd: {\n            description: 'Change directory, not really, lol!',\n            usage: 'cd <directory>',\n        },\n        ls: {\n            description: 'List files in the current directory',\n            usage: 'ls',\n        },\n        mkdir: {\n            description: 'Make a directory',\n            usage: 'mkdir <directory>',\n        },\n        clear: {\n            description: 'Clears the terminal',\n            usage: 'clear'\n        },\n        getcat: {\n            description: 'Get a cute cat image.',\n            usage: 'cat',\n        }\n    }\n}\n","/home/romedius/Documents/Programming/AshTerm/src/utils/cat.js",[],[],"/home/romedius/Documents/Programming/AshTerm/src/utils/spotify.js",[],[],{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"45","line":1,"column":27,"nodeType":"43","messageId":"44","endLine":1,"endColumn":36},{"ruleId":"41","severity":1,"message":"46","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":14},{"ruleId":"41","severity":1,"message":"47","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":14},{"ruleId":"41","severity":1,"message":"48","line":133,"column":23,"nodeType":"43","messageId":"44","endLine":133,"endColumn":27},{"ruleId":"49","severity":1,"message":"50","line":4,"column":1,"nodeType":"51","endLine":170,"endColumn":2,"suppressions":"52"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'figlet' is defined but never used.","'getcat' is defined but never used.","'item' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["53"],{"kind":"54","justification":"55"},"directive",""]